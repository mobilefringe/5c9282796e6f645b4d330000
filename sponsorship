<template>
    <div>fewfgregegeg</div>
</template>

<script>
    define(["Vue", "vuex", "moment", "moment-timezone", "vue-moment"], function(Vue, Vuex, moment, tz, VueMoment) {
        return Vue.component("sponsorship", {
            template: template, // the variable template will be injected,
            data: function() {
                return {
                    success_subscribe: false,
                    currentPage: null,
                    pageBanner : null,
                    accessibilityData : null
                }
            },
            props:['id', 'locale'],
            beforeRouteUpdate(to, from, next) {
                next();
                this.updatePageData(to.params.id);
            },
            created(){
               this.updatePageData(this.id);
            //   if(this.id == "bramaleacitycentre-accessibilty" ){
            //       this.updateAccessibilityData();
            //   }
            },
            computed: {
                ...Vuex.mapGetters([
                    'property',
                    'timezone',
                    'findRepoByName'
                ])
            },
            methods: {
                loadData: async function(id) {
                    try {
                        // avoid making LOAD_META_DATA call for now as it will cause the entire Promise.all to fail since no meta data is set up.
                        let results = await Promise.all([this.$store.dispatch('LOAD_PAGE_DATA', {url: this.property.mm_host + "/pages/" + id + ".json"}),this.$store.dispatch("getData", "repos")]);
                        return results;
                    } catch (e) {
                        console.log("Error loading data: " + e.message);
                    }
                },
                updatePageData (id) {
                    this.loadData(id).then(response => {
                        if(response == null || response == undefined) {
                            this.$router.replace('/');
                        }
                        this.currentPage = response[0].data;
                        var temp_repo = null;
                        //Add custom banners for indivial pages 
                        temp_repo = this.findRepoByName('Pages Banner');
                        //Add custom banners for indivial pages 
                        if( _.includes(id, 'accessibility')) {
                            temp_repo = this.findRepoByName('Accessibility Banner');
                        }
                        else if( _.includes(id, 'gift-cards')) {
                            temp_repo = this.findRepoByName('Gift Cards Banner');
                        }
                        else if( _.includes(id, 'leasing')) {
                            temp_repo = this.findRepoByName('Leasing Banner');
                        }
                        else {
                            temp_repo = this.findRepoByName('Pages Banner');
                        }
                        if(temp_repo && temp_repo.images) {
                            this.pageBanner = temp_repo.images[0];
                        }
                        else {
                            this.pageBanner = {};
                            this.pageBanner.image_url = "";
                        }
                    });
                },
                // updateAccessibilityData() {
                //     var vm = this;
                //     url = "//acc.speeker.co/get_display_templates?site_id=1";
                //     $.getJSON(url).done(function(data){
                //         var acc_data = data;
                //         acc_data.map(item => {
                //             item.notice_text_approved = _.replace(item.notice_text_approved, '<br/><br/>', '<br/>');
                //         });
                        
                //         vm.accessibilityData =  _.sortBy(acc_data, [function(o) { return o.service_completed_date; }]).reverse();
                //         console.log("accessibilityData",vm.accessibilityData)
                //     });
                // }
            }
        });
    });
</script>